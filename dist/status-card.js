/*! For license information please see status-card.js.LICENSE.txt */
(()=>{"use strict";const e=globalThis,t=e.ShadowRoot&&(void 0===e.ShadyCSS||e.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,i=Symbol(),s=new WeakMap;class o{constructor(e,t,s){if(this._$cssResult$=!0,s!==i)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=e,this.t=t}get styleSheet(){let e=this.o;const i=this.t;if(t&&void 0===e){const t=void 0!==i&&1===i.length;t&&(e=s.get(i)),void 0===e&&((this.o=e=new CSSStyleSheet).replaceSync(this.cssText),t&&s.set(i,e))}return e}toString(){return this.cssText}}const r=(e,...t)=>{const s=1===e.length?e[0]:t.reduce(((t,i,s)=>t+(e=>{if(!0===e._$cssResult$)return e.cssText;if("number"==typeof e)return e;throw Error("Value passed to 'css' function must be a 'css' function result: "+e+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(i)+e[s+1]),e[0]);return new o(s,e,i)},n=(i,s)=>{if(t)i.adoptedStyleSheets=s.map((e=>e instanceof CSSStyleSheet?e:e.styleSheet));else for(const t of s){const s=document.createElement("style"),o=e.litNonce;void 0!==o&&s.setAttribute("nonce",o),s.textContent=t.cssText,i.appendChild(s)}},a=t?e=>e:e=>e instanceof CSSStyleSheet?(e=>{let t="";for(const i of e.cssRules)t+=i.cssText;return(e=>new o("string"==typeof e?e:e+"",void 0,i))(t)})(e):e,{is:d,defineProperty:c,getOwnPropertyDescriptor:l,getOwnPropertyNames:m,getOwnPropertySymbols:h,getPrototypeOf:_}=Object,p=globalThis,u=p.trustedTypes,g=u?u.emptyScript:"",b=p.reactiveElementPolyfillSupport,v=(e,t)=>e,y={toAttribute(e,t){switch(t){case Boolean:e=e?g:null;break;case Object:case Array:e=null==e?e:JSON.stringify(e)}return e},fromAttribute(e,t){let i=e;switch(t){case Boolean:i=null!==e;break;case Number:i=null===e?null:Number(e);break;case Object:case Array:try{i=JSON.parse(e)}catch(e){i=null}}return i}},f=(e,t)=>!d(e,t),w={attribute:!0,type:String,converter:y,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol("metadata"),p.litPropertyMetadata??=new WeakMap;class k extends HTMLElement{static addInitializer(e){this._$Ei(),(this.l??=[]).push(e)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(e,t=w){if(t.state&&(t.attribute=!1),this._$Ei(),this.elementProperties.set(e,t),!t.noAccessor){const i=Symbol(),s=this.getPropertyDescriptor(e,i,t);void 0!==s&&c(this.prototype,e,s)}}static getPropertyDescriptor(e,t,i){const{get:s,set:o}=l(this.prototype,e)??{get(){return this[t]},set(e){this[t]=e}};return{get(){return s?.call(this)},set(t){const r=s?.call(this);o.call(this,t),this.requestUpdate(e,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(e){return this.elementProperties.get(e)??w}static _$Ei(){if(this.hasOwnProperty(v("elementProperties")))return;const e=_(this);e.finalize(),void 0!==e.l&&(this.l=[...e.l]),this.elementProperties=new Map(e.elementProperties)}static finalize(){if(this.hasOwnProperty(v("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(v("properties"))){const e=this.properties,t=[...m(e),...h(e)];for(const i of t)this.createProperty(i,e[i])}const e=this[Symbol.metadata];if(null!==e){const t=litPropertyMetadata.get(e);if(void 0!==t)for(const[e,i]of t)this.elementProperties.set(e,i)}this._$Eh=new Map;for(const[e,t]of this.elementProperties){const i=this._$Eu(e,t);void 0!==i&&this._$Eh.set(i,e)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(e){const t=[];if(Array.isArray(e)){const i=new Set(e.flat(1/0).reverse());for(const e of i)t.unshift(a(e))}else void 0!==e&&t.push(a(e));return t}static _$Eu(e,t){const i=t.attribute;return!1===i?void 0:"string"==typeof i?i:"string"==typeof e?e.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((e=>this.enableUpdating=e)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((e=>e(this)))}addController(e){(this._$EO??=new Set).add(e),void 0!==this.renderRoot&&this.isConnected&&e.hostConnected?.()}removeController(e){this._$EO?.delete(e)}_$E_(){const e=new Map,t=this.constructor.elementProperties;for(const i of t.keys())this.hasOwnProperty(i)&&(e.set(i,this[i]),delete this[i]);e.size>0&&(this._$Ep=e)}createRenderRoot(){const e=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return n(e,this.constructor.elementStyles),e}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((e=>e.hostConnected?.()))}enableUpdating(e){}disconnectedCallback(){this._$EO?.forEach((e=>e.hostDisconnected?.()))}attributeChangedCallback(e,t,i){this._$AK(e,i)}_$EC(e,t){const i=this.constructor.elementProperties.get(e),s=this.constructor._$Eu(e,i);if(void 0!==s&&!0===i.reflect){const o=(void 0!==i.converter?.toAttribute?i.converter:y).toAttribute(t,i.type);this._$Em=e,null==o?this.removeAttribute(s):this.setAttribute(s,o),this._$Em=null}}_$AK(e,t){const i=this.constructor,s=i._$Eh.get(e);if(void 0!==s&&this._$Em!==s){const e=i.getPropertyOptions(s),o="function"==typeof e.converter?{fromAttribute:e.converter}:void 0!==e.converter?.fromAttribute?e.converter:y;this._$Em=s,this[s]=o.fromAttribute(t,e.type),this._$Em=null}}requestUpdate(e,t,i){if(void 0!==e){if(i??=this.constructor.getPropertyOptions(e),!(i.hasChanged??f)(this[e],t))return;this.P(e,t,i)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(e,t,i){this._$AL.has(e)||this._$AL.set(e,t),!0===i.reflect&&this._$Em!==e&&(this._$Ej??=new Set).add(e)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(e){Promise.reject(e)}const e=this.scheduleUpdate();return null!=e&&await e,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[e,t]of this._$Ep)this[e]=t;this._$Ep=void 0}const e=this.constructor.elementProperties;if(e.size>0)for(const[t,i]of e)!0!==i.wrapped||this._$AL.has(t)||void 0===this[t]||this.P(t,this[t],i)}let e=!1;const t=this._$AL;try{e=this.shouldUpdate(t),e?(this.willUpdate(t),this._$EO?.forEach((e=>e.hostUpdate?.())),this.update(t)):this._$EU()}catch(t){throw e=!1,this._$EU(),t}e&&this._$AE(t)}willUpdate(e){}_$AE(e){this._$EO?.forEach((e=>e.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(e)),this.updated(e)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(e){return!0}update(e){this._$Ej&&=this._$Ej.forEach((e=>this._$EC(e,this[e]))),this._$EU()}updated(e){}firstUpdated(e){}}k.elementStyles=[],k.shadowRootOptions={mode:"open"},k[v("elementProperties")]=new Map,k[v("finalized")]=new Map,b?.({ReactiveElement:k}),(p.reactiveElementVersions??=[]).push("2.0.4");const O=globalThis,$=O.trustedTypes,E=$?$.createPolicy("lit-html",{createHTML:e=>e}):void 0,x="$lit$",A=`lit$${Math.random().toFixed(9).slice(2)}$`,C="?"+A,S=`<${C}>`,z=document,D=()=>z.createComment(""),P=e=>null===e||"object"!=typeof e&&"function"!=typeof e,M=Array.isArray,U="[ \t\n\f\r]",N=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,H=/-->/g,R=/>/g,B=RegExp(`>|${U}(?:([^\\s"'>=/]+)(${U}*=${U}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`,"g"),j=/'/g,F=/"/g,L=/^(?:script|style|textarea|title)$/i,T=e=>(t,...i)=>({_$litType$:e,strings:t,values:i}),I=T(1),G=(T(2),T(3),Symbol.for("lit-noChange")),K=Symbol.for("lit-nothing"),V=new WeakMap,W=z.createTreeWalker(z,129);function q(e,t){if(!M(e)||!e.hasOwnProperty("raw"))throw Error("invalid template strings array");return void 0!==E?E.createHTML(t):t}const Z=(e,t)=>{const i=e.length-1,s=[];let o,r=2===t?"<svg>":3===t?"<math>":"",n=N;for(let t=0;t<i;t++){const i=e[t];let a,d,c=-1,l=0;for(;l<i.length&&(n.lastIndex=l,d=n.exec(i),null!==d);)l=n.lastIndex,n===N?"!--"===d[1]?n=H:void 0!==d[1]?n=R:void 0!==d[2]?(L.test(d[2])&&(o=RegExp("</"+d[2],"g")),n=B):void 0!==d[3]&&(n=B):n===B?">"===d[0]?(n=o??N,c=-1):void 0===d[1]?c=-2:(c=n.lastIndex-d[2].length,a=d[1],n=void 0===d[3]?B:'"'===d[3]?F:j):n===F||n===j?n=B:n===H||n===R?n=N:(n=B,o=void 0);const m=n===B&&e[t+1].startsWith("/>")?" ":"";r+=n===N?i+S:c>=0?(s.push(a),i.slice(0,c)+x+i.slice(c)+A+m):i+A+(-2===c?t:m)}return[q(e,r+(e[i]||"<?>")+(2===t?"</svg>":3===t?"</math>":"")),s]};class J{constructor({strings:e,_$litType$:t},i){let s;this.parts=[];let o=0,r=0;const n=e.length-1,a=this.parts,[d,c]=Z(e,t);if(this.el=J.createElement(d,i),W.currentNode=this.el.content,2===t||3===t){const e=this.el.content.firstChild;e.replaceWith(...e.childNodes)}for(;null!==(s=W.nextNode())&&a.length<n;){if(1===s.nodeType){if(s.hasAttributes())for(const e of s.getAttributeNames())if(e.endsWith(x)){const t=c[r++],i=s.getAttribute(e).split(A),n=/([.?@])?(.*)/.exec(t);a.push({type:1,index:o,name:n[2],strings:i,ctor:"."===n[1]?te:"?"===n[1]?ie:"@"===n[1]?se:ee}),s.removeAttribute(e)}else e.startsWith(A)&&(a.push({type:6,index:o}),s.removeAttribute(e));if(L.test(s.tagName)){const e=s.textContent.split(A),t=e.length-1;if(t>0){s.textContent=$?$.emptyScript:"";for(let i=0;i<t;i++)s.append(e[i],D()),W.nextNode(),a.push({type:2,index:++o});s.append(e[t],D())}}}else if(8===s.nodeType)if(s.data===C)a.push({type:2,index:o});else{let e=-1;for(;-1!==(e=s.data.indexOf(A,e+1));)a.push({type:7,index:o}),e+=A.length-1}o++}}static createElement(e,t){const i=z.createElement("template");return i.innerHTML=e,i}}function Q(e,t,i=e,s){if(t===G)return t;let o=void 0!==s?i._$Co?.[s]:i._$Cl;const r=P(t)?void 0:t._$litDirective$;return o?.constructor!==r&&(o?._$AO?.(!1),void 0===r?o=void 0:(o=new r(e),o._$AT(e,i,s)),void 0!==s?(i._$Co??=[])[s]=o:i._$Cl=o),void 0!==o&&(t=Q(e,o._$AS(e,t.values),o,s)),t}class X{constructor(e,t){this._$AV=[],this._$AN=void 0,this._$AD=e,this._$AM=t}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(e){const{el:{content:t},parts:i}=this._$AD,s=(e?.creationScope??z).importNode(t,!0);W.currentNode=s;let o=W.nextNode(),r=0,n=0,a=i[0];for(;void 0!==a;){if(r===a.index){let t;2===a.type?t=new Y(o,o.nextSibling,this,e):1===a.type?t=new a.ctor(o,a.name,a.strings,this,e):6===a.type&&(t=new oe(o,this,e)),this._$AV.push(t),a=i[++n]}r!==a?.index&&(o=W.nextNode(),r++)}return W.currentNode=z,s}p(e){let t=0;for(const i of this._$AV)void 0!==i&&(void 0!==i.strings?(i._$AI(e,i,t),t+=i.strings.length-2):i._$AI(e[t])),t++}}class Y{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(e,t,i,s){this.type=2,this._$AH=K,this._$AN=void 0,this._$AA=e,this._$AB=t,this._$AM=i,this.options=s,this._$Cv=s?.isConnected??!0}get parentNode(){let e=this._$AA.parentNode;const t=this._$AM;return void 0!==t&&11===e?.nodeType&&(e=t.parentNode),e}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(e,t=this){e=Q(this,e,t),P(e)?e===K||null==e||""===e?(this._$AH!==K&&this._$AR(),this._$AH=K):e!==this._$AH&&e!==G&&this._(e):void 0!==e._$litType$?this.$(e):void 0!==e.nodeType?this.T(e):(e=>M(e)||"function"==typeof e?.[Symbol.iterator])(e)?this.k(e):this._(e)}O(e){return this._$AA.parentNode.insertBefore(e,this._$AB)}T(e){this._$AH!==e&&(this._$AR(),this._$AH=this.O(e))}_(e){this._$AH!==K&&P(this._$AH)?this._$AA.nextSibling.data=e:this.T(z.createTextNode(e)),this._$AH=e}$(e){const{values:t,_$litType$:i}=e,s="number"==typeof i?this._$AC(e):(void 0===i.el&&(i.el=J.createElement(q(i.h,i.h[0]),this.options)),i);if(this._$AH?._$AD===s)this._$AH.p(t);else{const e=new X(s,this),i=e.u(this.options);e.p(t),this.T(i),this._$AH=e}}_$AC(e){let t=V.get(e.strings);return void 0===t&&V.set(e.strings,t=new J(e)),t}k(e){M(this._$AH)||(this._$AH=[],this._$AR());const t=this._$AH;let i,s=0;for(const o of e)s===t.length?t.push(i=new Y(this.O(D()),this.O(D()),this,this.options)):i=t[s],i._$AI(o),s++;s<t.length&&(this._$AR(i&&i._$AB.nextSibling,s),t.length=s)}_$AR(e=this._$AA.nextSibling,t){for(this._$AP?.(!1,!0,t);e&&e!==this._$AB;){const t=e.nextSibling;e.remove(),e=t}}setConnected(e){void 0===this._$AM&&(this._$Cv=e,this._$AP?.(e))}}class ee{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(e,t,i,s,o){this.type=1,this._$AH=K,this._$AN=void 0,this.element=e,this.name=t,this._$AM=s,this.options=o,i.length>2||""!==i[0]||""!==i[1]?(this._$AH=Array(i.length-1).fill(new String),this.strings=i):this._$AH=K}_$AI(e,t=this,i,s){const o=this.strings;let r=!1;if(void 0===o)e=Q(this,e,t,0),r=!P(e)||e!==this._$AH&&e!==G,r&&(this._$AH=e);else{const s=e;let n,a;for(e=o[0],n=0;n<o.length-1;n++)a=Q(this,s[i+n],t,n),a===G&&(a=this._$AH[n]),r||=!P(a)||a!==this._$AH[n],a===K?e=K:e!==K&&(e+=(a??"")+o[n+1]),this._$AH[n]=a}r&&!s&&this.j(e)}j(e){e===K?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,e??"")}}class te extends ee{constructor(){super(...arguments),this.type=3}j(e){this.element[this.name]=e===K?void 0:e}}class ie extends ee{constructor(){super(...arguments),this.type=4}j(e){this.element.toggleAttribute(this.name,!!e&&e!==K)}}class se extends ee{constructor(e,t,i,s,o){super(e,t,i,s,o),this.type=5}_$AI(e,t=this){if((e=Q(this,e,t,0)??K)===G)return;const i=this._$AH,s=e===K&&i!==K||e.capture!==i.capture||e.once!==i.once||e.passive!==i.passive,o=e!==K&&(i===K||s);s&&this.element.removeEventListener(this.name,this,i),o&&this.element.addEventListener(this.name,this,e),this._$AH=e}handleEvent(e){"function"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,e):this._$AH.handleEvent(e)}}class oe{constructor(e,t,i){this.element=e,this.type=6,this._$AN=void 0,this._$AM=t,this.options=i}get _$AU(){return this._$AM._$AU}_$AI(e){Q(this,e)}}const re=O.litHtmlPolyfillSupport;re?.(J,Y),(O.litHtmlVersions??=[]).push("3.2.1");class ne extends k{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const e=super.createRenderRoot();return this.renderOptions.renderBefore??=e.firstChild,e}update(e){const t=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(e),this._$Do=((e,t,i)=>{const s=i?.renderBefore??t;let o=s._$litPart$;if(void 0===o){const e=i?.renderBefore??null;s._$litPart$=o=new Y(t.insertBefore(D(),e),e,void 0,i??{})}return o._$AI(e),o})(t,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return G}}ne._$litElement$=!0,ne.finalized=!0,globalThis.litElementHydrateSupport?.({LitElement:ne});const ae=globalThis.litElementPolyfillSupport;ae?.({LitElement:ne}),(globalThis.litElementVersions??=[]).push("4.1.1");const de={af:{edit_domains:"Bewerk Domeine",edit_cover_dc:"Bewerk Dek Geräteklassen",edit_binary_sensor_dc:"Bewerk Binêre Sensor Geräteklassen",edit_domains_dc:"Bewerk Domeine/Toestelklasse",show_person:"Wys Persone",bulk_mode:"Aktiveer Masseneditiermodus"},ar:{edit_domains:"تعديل المجالات",edit_cover_dc:"تعديل فئات أجهزة التغطية",edit_binary_sensor_dc:"تعديل فئات أجهزة الاستشعار الثنائية",edit_domains_dc:"تعديل المجالات/فئات الأجهزة",show_person:"عرض الكيانات الشخصية",bulk_mode:"تفعيل وضع التحرير بالجملة"},bg:{edit_domains:"Редактиране на домейни",edit_cover_dc:"Редактиране на класове устройства за покритие",edit_binary_sensor_dc:"Редактиране на класове устройства за бинарни сензори",edit_domains_dc:"Редактиране на домейни/класове устройства",show_person:"Показване на лица",bulk_mode:"Активиране на режим за масово редактиране"},bn:{edit_domains:"ডোমেইন সম্পাদনা করুন",edit_cover_dc:"কভার ডিভাইস ক্লাস সম্পাদনা করুন",edit_binary_sensor_dc:"বাইনারি সেন্সর ডিভাইস ক্লাস সম্পাদনা করুন",edit_domains_dc:"ডোমেইন/ডিভাইস ক্লাস সম্পাদনা করুন",show_person:"ব্যক্তি প্রদর্শন করুন",bulk_mode:"বাল্ক সম্পাদনা মোড সক্রিয় করুন"},bs:{edit_domains:"Uredi domene",edit_cover_dc:"Uredi klase uređaja za pokrivače",edit_binary_sensor_dc:"Uredi binarne klase senzora",edit_domains_dc:"Uredi domene/klase uređaja",show_person:"Prikaži osobe",bulk_mode:"Omogući način masovnog uređivanja"},ca:{edit_domains:"Edita dominis",edit_cover_dc:"Edita classes de dispositius de coberta",edit_binary_sensor_dc:"Edita classes de sensors binaris",edit_domains_dc:"Edita dominis/classes de dispositius",show_person:"Mostrar entitats de persones",bulk_mode:"Activar el mode d'edició massiva"},cs:{edit_domains:"Upravit domény",edit_cover_dc:"Upravit třídy zařízení krytí",edit_binary_sensor_dc:"Upravit třídy binárních senzorů",edit_domains_dc:"Upravit domény/třídy zařízení",show_person:"Zobrazit osoby",bulk_mode:"Povolit hromadné úpravy"},cy:{edit_domains:"Golygu Domonau",edit_cover_dc:"Golygu Dosbarthiadau Dyfeisiau Cysgodol",edit_binary_sensor_dc:"Golygu Dosbarthiadau Synwyryddion Bi-ner",edit_domains_dc:"Golygu Domonau/Dosbarthiadau Dyfeisiau",show_person:"Dangos Personau",bulk_mode:"Caniatáu Modd Golygu Mawr"},da:{edit_domains:"Rediger domæner",edit_cover_dc:"Rediger dækklasse enheder",edit_binary_sensor_dc:"Rediger binære sensor enheder",edit_domains_dc:"Rediger domæner/enhedsklasser",show_person:"Vis personer",bulk_mode:"Aktivér masse redigeringsmode"},de:{edit_domains:"Bearbeite Domänen",edit_cover_dc:"Bearbeite Cover Geräteklassen",edit_binary_sensor_dc:"Bearbeite Binäre Sensoren Geräteklassen",edit_domains_dc:"Bearbeite Domänen/Geräteklassen",show_person:"Personen anzeigen",bulk_mode:"Masseneditiermodus aktivieren"},el:{edit_domains:"Επεξεργασία Τομέων",edit_cover_dc:"Επεξεργασία Κατηγοριών Συσκευών Καλύμματος",edit_binary_sensor_dc:"Επεξεργασία Κατηγοριών Διψήφιων Αισθητήρων",edit_domains_dc:"Επεξεργασία Τομέων/Κατηγοριών Συσκευών",show_person:"Εμφάνιση Ανθρώπων",bulk_mode:"Ενεργοποίηση Λειτουργίας Μαζικής Επεξεργασίας"},en:{edit_domains:"Edit Domains",edit_domains_dc:"Edit Domains/Device Classes",edit_cover_dc:"Edit Cover Device Classes",edit_binary_sensor_dc:"Edit Binary Sensor Device Classes",show_person:"Show Person Entities",bulk_mode:"Enable Bulk Edit Mode"},eo:{edit_domains:"Redakti domenojn",edit_cover_dc:"Redakti kovrajn aparatojn",edit_binary_sensor_dc:"Redakti binarajn sensilojn",edit_domains_dc:"Redakti domenojn/Aparatajn Klasojn",show_person:"Montri personojn",bulk_mode:"Ebligi masivan redaktadon"},es:{edit_domains:"Editar Dominios",edit_cover_dc:"Editar Clases de Dispositivos de Cubierta",edit_binary_sensor_dc:"Editar Clases de Sensores Binarios",edit_domains_dc:"Editar Dominios/Clases de Dispositivos",show_person:"Mostrar Entidades de Personas",bulk_mode:"Activar Modo de Edición Masiva"},es419:{edit_domains:"Editar Dominios",edit_cover_dc:"Editar Clases de Dispositivos de Cubierta",edit_binary_sensor_dc:"Editar Clases de Sensores Binarios",edit_domains_dc:"Editar Dominios/Clases de Dispositivos",show_person:"Mostrar Entidades de Personas",bulk_mode:"Activar Modo de Edición Masiva"},et:{edit_domains:"Redigeeri domeene",edit_cover_dc:"Redigeeri katte seadmete klasse",edit_binary_sensor_dc:"Redigeeri binaarsete andurite klasse",edit_domains_dc:"Redigeeri domeene/Seadmete klasse",show_person:"Kuva isikud",bulk_mode:"Luba masstootmisrežiim"},eu:{edit_domains:"Editatu domeinak",edit_cover_dc:"Editatu estaldurako gailuen klaseak",edit_binary_sensor_dc:"Editatu sentsore bikoitzeko klaseak",edit_domains_dc:"Editatu Domeinak/Gailuen Klaseak",show_person:"Pertsonak erakutsi",bulk_mode:"Gehitu masa-editatzeko modua"},fa:{edit_domains:"ویرایش دامنه‌ها",edit_cover_dc:"ویرایش کلاس‌های دستگاه پوشش",edit_binary_sensor_dc:"ویرایش کلاس‌های حسگرهای باینری",edit_domains_dc:"ویرایش دامنه‌ها/کلاس‌های دستگاه",show_person:"نمایش موجودیت‌های شخصی",bulk_mode:"فعال کردن حالت ویرایش عمده"},fi:{edit_domains:"Muokkaa alueita",edit_cover_dc:"Muokkaa kattolaitteiden luokkia",edit_binary_sensor_dc:"Muokkaa binaaristen antureiden luokkia",edit_domains_dc:"Muokkaa Alueita/Laiteluokkia",show_person:"Näytä henkilöt",bulk_mode:"Ota käyttöön massamuokkaustila"},fy:{edit_domains:"Bewerk domeinen",edit_cover_dc:"Bewerk dek-apparatuerklassen",edit_binary_sensor_dc:"Bewerk binaire sensorapparatuerklassen",edit_domains_dc:"Bewerk Domeinen/Apparaatklassen",show_person:"Toon personen",bulk_mode:"Aktivearje massa-bewurkingsmodus"},fy:{edit_domains:"Bewerk domeinen",edit_cover_dc:"Bewerk dek-apparatuerklassen",edit_binary_sensor_dc:"Bewerk binaire sensorapparatuerklassen",edit_domains_dc:"Bewerk Domeinen/Apparaatklassen",show_person:"Toon personen",bulk_mode:"Aktivearje massa-bewurkingsmodus"},fr:{edit_domains:"Modifier les domaines",edit_cover_dc:"Modifier les classes de dispositifs de couverture",edit_binary_sensor_dc:"Modifier les classes de capteurs binaires",edit_domains_dc:"Modifier Domaines/Classes de Dispositifs",show_person:"Afficher les entités de personnes",bulk_mode:"Activer le mode d'édition en masse"},ga:{edit_domains:"Déan comhoibriú ar na réimsí",edit_cover_dc:"Déan comhoibriú ar na ranganna gléasacha clúdach",edit_binary_sensor_dc:"Déan comhoibriú ar na ranganna braiteoirí dé-íogair",edit_domains_dc:"Déan Comhoibriú ar Réimsí/Ranganna Gléasanna",show_person:"Taispeáin na daoine",bulk_mode:"Cuir an mód comhoibriú ar aghaidh"},gl:{edit_domains:"Editar dominios",edit_cover_dc:"Editar clases de dispositivos de cobertura",edit_binary_sensor_dc:"Editar clases de sensores binarios",edit_domains_dc:"Editar Dominios/Clases de Dispositivos",show_person:"Amosar entidades de persoas",bulk_mode:"Activar modo de edición en masa"},gsw:{edit_domains:"Bearbeite Domäne",edit_cover_dc:"Bearbeite Cover Gerätekategorien",edit_binary_sensor_dc:"Bearbeite binäre Sensorklassen",edit_domains_dc:"Bearbeite Domänen/Gerätekategorien",show_person:"Personen anzeigen",bulk_mode:"Masseneditiermodus aktivieren"},he:{edit_domains:"עריכת תחומים",edit_cover_dc:"עריכת קטגוריות מכשירים מכסים",edit_binary_sensor_dc:"עריכת קטגוריות חיישנים בינאריים",edit_domains_dc:"עריכת תחומים/קטגוריות מכשירים",show_person:"הצגת ישויות אנשים",bulk_mode:"הפעלת מצב עריכה המוני"},hi:{edit_domains:"डोमेन संपादित करें",edit_cover_dc:"कवरेज उपकरण श्रेणियाँ संपादित करें",edit_binary_sensor_dc:"बाइनरी सेंसर उपकरण श्रेणियाँ संपादित करें",edit_domains_dc:"डोमेन/डिवाइस श्रेणियाँ संपादित करें",show_person:"व्यक्तियाँ दिखाएँ",bulk_mode:"मास संपादन मोड सक्रिय करें"},hr:{edit_domains:"Uredi domene",edit_cover_dc:"Uredi klase uređaja za pokrivače",edit_binary_sensor_dc:"Uredi binarne klase senzora",edit_domains_dc:"Uredi Domene/Klase Uređaja",show_person:"Prikaži osobe",bulk_mode:"Omogući način masovnog uređivanja"},hu:{edit_domains:"Domének szerkesztése",edit_cover_dc:"Fedél eszközosztályok szerkesztése",edit_binary_sensor_dc:"Bináris érzékelők eszközosztályainak szerkesztése",edit_domains_dc:"Domének/Eszközosztályok Szerkesztése",show_person:"Személyek megjelenítése",bulk_mode:"Tömegszerkesztési mód engedélyezése"},hy:{edit_domains:"Խմբագրել դոմեյնները",edit_cover_dc:"Խմբագրել ծածկող սարքերի դասեր",edit_binary_sensor_dc:"Խմբագրել բինարային սենսորների դասեր",edit_domains_dc:"Խմբագրել Դոմեյններ/Սարքերի Դասեր",show_person:"Ցուցադրել անձինք",bulk_mode:"Արդյունավետ խմբագրելու ռեժիմը ակտիվացնել"},id:{edit_domains:"Edit Domain",edit_cover_dc:"Edit Kelas Perangkat Penutup",edit_binary_sensor_dc:"Edit Kelas Sensor Biner",edit_domains_dc:"Edit Domain/Kelas Perangkat",show_person:"Tampilkan Entitas Orang",bulk_mode:"Aktifkan Mode Edit Massal"},it:{edit_domains:"Modifica Domini",edit_cover_dc:"Modifica Classi di Dispositivi di Copertura",edit_binary_sensor_dc:"Modifica Classi di Sensori Binari",edit_domains_dc:"Modifica Domini/Classi di Dispositivi",show_person:"Mostra Entità Personali",bulk_mode:"Attiva Modalità di Modifica di Massa"},is:{edit_domains:"Breyta lénurðum",edit_cover_dc:"Breyta flokkum þakgripa",edit_binary_sensor_dc:"Breyta flokkunum af tvístrunarskynjurum",edit_domains_dc:"Breyta Lénum/Tækjaflokkum",show_person:"Sýna einstaklinga",bulk_mode:"Virknast fjöldabreytandi"},ja:{edit_domains:"ドメインを編集",edit_cover_dc:"カバー デバイス クラスを編集",edit_binary_sensor_dc:"バイナリ センサー デバイス クラスを編集",edit_domains_dc:"ドメイン/デバイス クラスを編集",show_person:"人のエンティティを表示",bulk_mode:"バルク編集モードを有効にする"},ka:{edit_domains:"დომენების რედაქტირება",edit_cover_dc:"ზვიგენის მოწყობილობების კლასების რედაქტირება",edit_binary_sensor_dc:"ბინარული სენსორების კლასების რედაქტირება",edit_domains_dc:"დომენების/მოწყობილობების კლასების რედაქტირება",show_person:"პერსონების ჩვენება",bulk_mode:"მასობრივი რედაქტირების რეჟიმის აქტივაცია"},ko:{edit_domains:"도메인 편집",edit_cover_dc:"커버 장치 클래스 편집",edit_binary_sensor_dc:"이진 센서 장치 클래스 편집",edit_domains_dc:"도메인/장치 클래스 편집",show_person:"사람 엔티티 표시",bulk_mode:"대량 편집 모드 활성화"},lb:{edit_domains:"Domaine bearbechten",edit_cover_dc:"Dächer Gerät Klassen bearbechten",edit_binary_sensor_dc:"Binärsensoren Gerät Klassen bearbechten",edit_domains_dc:"Domaine/Gerätekategorien bearbechten",show_person:"Persounen weisen",bulk_mode:"Massediteur Modus aktivéieren"},lt:{edit_domains:"Redaguoti domenas",edit_cover_dc:"Redaguoti dengiančių įrenginių klases",edit_binary_sensor_dc:"Redaguoti binarinių jutiklių klases",edit_domains_dc:"Redaguoti Domenus/Įrenginių Klases",show_person:"Rodyti asmenis",bulk_mode:"Įgalinti masinį redagavimą"},lv:{edit_domains:"Rediģēt domēnus",edit_cover_dc:"Rediģēt seguma ierīču klases",edit_binary_sensor_dc:"Rediģēt bināro sensoru klases",edit_domains_dc:"Rediģēt Domēnus/Ierīču Klases",show_person:"Rādīt personas",bulk_mode:"Iespējot masveida rediģēšanas režīmu"},mk:{edit_domains:"Уреди домени",edit_cover_dc:"Уреди категории на покривни уреди",edit_binary_sensor_dc:"Уреди категории на бинарни сензори",edit_domains_dc:"Уреди Домени/Класи на Уреди",show_person:"Прикажи лица",bulk_mode:"Овозможи режим за масовно уредување"},ml:{edit_domains:"ഡൊമെയ്ൻ എഡിറ്റ് ചെയ്യുക",edit_cover_dc:"കവർ ഉപകരണം വിഭാഗങ്ങൾ എഡിറ്റ് ചെയ്യുക",edit_binary_sensor_dc:"ബൈനറി സെൻസർ ഉപകരണം വിഭാഗങ്ങൾ എഡിറ്റ് ചെയ്യുക",edit_domains_dc:"ഡൊമെയ്ൻ/ഉപകരണ വിഭാഗങ്ങൾ എഡിറ്റ് ചെയ്യുക",show_person:"യൂണിറ്റി കാണിക്കുക",bulk_mode:"ബൾക്ക് എഡിറ്റ് മോഡ് സജീവമാക്കുക"},nl:{edit_domains:"Domeinen bewerken",edit_cover_dc:"Bewerk dekkingsapparaatklassen",edit_binary_sensor_dc:"Bewerk binaire sensorapparaatklassen",edit_domains_dc:"Bewerk Domeinen/Apparaatklassen",show_person:"Toon personen",bulk_mode:"Schakel massabewerking in"},nb:{edit_domains:"Rediger domener",edit_cover_dc:"Rediger dekkeklasssenheter",edit_binary_sensor_dc:"Rediger binære sensorenheter",edit_domains_dc:"Rediger Domener/Enhetsklasser",show_person:"Vis personer",bulk_mode:"Aktiver massemuligheter"},nn:{edit_domains:"Rediger domener",edit_cover_dc:"Rediger dekking enhetsklasser",edit_binary_sensor_dc:"Rediger binære sensorenhetsklasser",edit_domains_dc:"Rediger Domener/Enhetsklasser",show_person:"Vis personer",bulk_mode:"Aktiver massebehandling"},pl:{edit_domains:"Edytuj domeny",edit_cover_dc:"Edytuj klasy urządzeń pokrycia",edit_binary_sensor_dc:"Edytuj klasy czujników binarnych",edit_domains_dc:"Edytuj Domeny/Klasy Urządzeń",show_person:"Pokaż osoby",bulk_mode:"Włącz tryb edycji zbiorczej"},pt:{edit_domains:"Editar Domínios",edit_cover_dc:"Editar Classes de Dispositivos de Cobertura",edit_binary_sensor_dc:"Editar Classes de Sensores Binários",edit_domains_dc:"Editar Domínios/Classes de Dispositivos",show_person:"Mostrar Entidades de Pessoas",bulk_mode:"Ativar Modo de Edição em Massa"},"pt-BR":{edit_domains:"Editar Domínios",edit_cover_dc:"Editar Classes de Dispositivos de Cobertura",edit_binary_sensor_dc:"Editar Classes de Sensores Binários",edit_domains_dc:"Editar Domínios/Classes de Dispositivos",show_person:"Mostrar Entidades de Pessoas",bulk_mode:"Ativar Modo de Edição em Massa"},ro:{edit_domains:"Editați domeniile",edit_cover_dc:"Editați clasele de dispozitive de acoperire",edit_binary_sensor_dc:"Editați clasele senzorilor binari",edit_domains_dc:"Editați Domeniile/Clasele Dispozitivelor",show_person:"Afișați entitățile persoanelor",bulk_mode:"Activați modul de editare în masă"},ru:{edit_domains:"Редактировать домены",edit_cover_dc:"Редактировать классы устройств покрытия",edit_binary_sensor_dc:"Редактировать классы бинарных датчиков",edit_domains_dc:"Редактировать Домены/Классы Устройств",show_person:"Показать лиц",bulk_mode:"Включить режим массового редактирования"},sk:{edit_domains:"Upraviť domény",edit_cover_dc:"Upraviť triedy zariadení pokrývajúcich",edit_binary_sensor_dc:"Upraviť triedy binárnych senzorov",edit_domains_dc:"Upraviť Domény/Triedy Zariadení",show_person:"Zobraziť osoby",bulk_mode:"Povoliť hromadné úpravy"},sl:{edit_domains:"Uredi domene",edit_cover_dc:"Uredi razrede pokrivnih naprav",edit_binary_sensor_dc:"Uredi razrede binarnih senzorjev",edit_domains_dc:"Uredi domene/razrede naprav",show_person:"Prikaži osebe",bulk_mode:"Omogoči način množičnega urejanja"},sr:{edit_domains:"Уреди домене",edit_cover_dc:"Уреди класе покривних уређаја",edit_binary_sensor_dc:"Уреди класе бинарних сензора",edit_domains_dc:"Уреди домене/класе уређаја",show_person:"Прикажи особе",bulk_mode:"Омогући режим масовног уређивања"},"sr-Latn":{edit_domains:"Uredi domene",edit_cover_dc:"Uredi klase pokrivnih uređaja",edit_binary_sensor_dc:"Uredi klase binarnih senzora",edit_domains_dc:"Uredi domene/klase uređaja",show_person:"Prikaži osobe",bulk_mode:"Omogući režim masovnog uređivanja"},sv:{edit_domains:"Redigera domäner",edit_cover_dc:"Redigera klasser för täckningsenheter",edit_binary_sensor_dc:"Redigera klasser för binära sensorer",edit_domains_dc:"Redigera Domäner/Enhetsklasser",show_person:"Visa personer",bulk_mode:"Aktivera massredigeringsläge"},ta:{edit_domains:"அளவீட்டுகளை திருத்தவும்",edit_cover_dc:"மூடிய சாதன வகைகளை திருத்தவும்",edit_binary_sensor_dc:"இருமை உணர்படிகளின் வகைகளை திருத்தவும்",edit_domains_dc:"அளவீடுகள்/சாதன வகைகள் திருத்தவும்",show_person:"மக்கள் செயல்படங்களை காண்பிக்கவும்",bulk_mode:"பெரிய அளவிலான திருத்தம் செயல்முறையை செயல்படுத்தவும்"},te:{edit_domains:"డొమెయిన్ సంపాదించు",edit_cover_dc:"కవర్ పరికరాల వర్గాలను సంపాదించు",edit_binary_sensor_dc:"బైనరీ సెన్సార్ పరికరాల వర్గాలను సంపాదించు",edit_domains_dc:"డొమెయిన్/పరికరం వర్గాలను సంపాదించు",show_person:"వ్యక్తుల యూనిటీలను చూపించు",bulk_mode:"బల్క్ సంపాదన మోడ్ చురుకుగా చేయు"},th:{edit_domains:"แก้ไขโดเมน",edit_cover_dc:"แก้ไขประเภทอุปกรณ์ที่ปิด",edit_binary_sensor_dc:"แก้ไขประเภทเซ็นเซอร์แบบไบนารี",edit_domains_dc:"แก้ไขโดเมน/ประเภทอุปกรณ์",show_person:"แสดงเอนทิตีบุคคล",bulk_mode:"เปิดใช้งานโหมดแก้ไขกลุ่ม"},tr:{edit_domains:"Alanları düzenle",edit_cover_dc:"Kapatma cihaz sınıflarını düzenle",edit_binary_sensor_dc:"İkili sensör cihaz sınıflarını düzenle",edit_domains_dc:"Alanlar/ cihaz sınıflarını düzenle",show_person:"Kişi varlıklarını göster",bulk_mode:"Toplu düzenleme modunu etkinleştir"},uk:{edit_domains:"Редагувати домени",edit_cover_dc:"Редагувати класи покриттів",edit_binary_sensor_dc:"Редагувати класи бінарних датчиків",edit_domains_dc:"Редагувати Домени/Класи Пристроїв",show_person:"Показати особи",bulk_mode:"Увімкнути режим масового редагування"},ur:{edit_domains:"ڈومین میں ترمیم کریں",edit_cover_dc:"کوریج ڈیوائس کلاسز میں ترمیم کریں",edit_binary_sensor_dc:"بائنری سینسر ڈیوائس کلاسز میں ترمیم کریں",edit_domains_dc:"ڈومین/ڈیوائس کلاسز میں ترمیم کریں",show_person:"شخصیات کو دکھائیں",bulk_mode:"بلیک موڈ کو فعال کریں"},vi:{edit_domains:"Chỉnh sửa miền",edit_cover_dc:"Chỉnh sửa các loại thiết bị bảo vệ",edit_binary_sensor_dc:"Chỉnh sửa các loại cảm biến nhị phân",edit_domains_dc:"Chỉnh sửa miền/Lớp thiết bị",show_person:"Hiển thị thực thể cá nhân",bulk_mode:"Kích hoạt chế độ chỉnh sửa hàng loạt"},"zh-Hans":{edit_domains:"编辑域",edit_cover_dc:"编辑覆盖设备类别",edit_binary_sensor_dc:"编辑二进制传感器设备类别",edit_domains_dc:"编辑域/设备类别",show_person:"显示个人实体",bulk_mode:"启用批量编辑模式"},"zh-Hant":{edit_domains:"編輯域",edit_cover_dc:"編輯覆蓋設備類別",edit_binary_sensor_dc:"編輯二元感測器設備類別",edit_domains_dc:"編輯域/設備類別",show_person:"顯示人員實體",bulk_mode:"啟用批量編輯模式"}};function ce(e,t="en"){return de[t]&&de[t][e]?de[t][e]:e}const le=new Set(["closed","locked","off","docked","idle","standby","paused","auto","not_home","disarmed"]),me=new Set(["unavailable","unknown"]);class he extends ne{static get properties(){return{hass:{},config:{}}}shouldComponentUpdate(e,t){return e.config!==this.props.config||t!==this.state}constructor(){super(),this.openedDomains=[],this.openedDeviceClasses=[],this.entityConfig={alarm_control_panel:{icon:"mdi:bell-ring",sortOrder:1},siren:{icon:"mdi:alarm-light",sortOrder:2},lock:{icon:"mdi:lock",sortOrder:3},light:{icon:"mdi:lightbulb",sortOrder:4},media_player:{icon:"mdi:cast",sortOrder:5},climate:{icon:"mdi:thermostat",sortOrder:6},switch:{icon:"mdi:power",sortOrder:7},vacuum:{icon:"mdi:robot-vacuum",sortOrder:8},fan:{icon:"mdi:fan",sortOrder:9},humidifier:{icon:"mdi:air-humidifier",sortOrder:10},lawn_mower:{icon:"mdi:robot-mower",sortOrder:11},valve:{icon:"mdi:valve",sortOrder:12},water_heater:{icon:"mdi:water-boiler",sortOrder:13},remote:{icon:"mdi:remote",sortOrder:14},update:{icon:"mdi:update",sortOrder:53},device_tracker:{icon:"mdi:cellphone",sortOrder:54},input_boolean:{icon:"mdi:toggle-switch",sortOrder:55},timer:{icon:"mdi:timer-outline",sortOrder:56},counter:{icon:"mdi:counter",sortOrder:57},calendar:{icon:"mdi:calendar",sortOrder:58},cover:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:15},{name:"window",icon:"mdi:window-open",sortOrder:16},{name:"garage",icon:"mdi:garage-open",sortOrder:17},{name:"gate",icon:"mdi:gate-open",sortOrder:18},{name:"blind",icon:"mdi:blinds-open",sortOrder:19},{name:"curtain",icon:"mdi:curtains",sortOrder:20},{name:"damper",icon:"mdi:valve",sortOrder:21},{name:"awning",icon:"mdi:window-shutter-open",sortOrder:22},{name:"shade",icon:"mdi:roller-shade",sortOrder:23},{name:"shutter",icon:"mdi:window-shutter-open",sortOrder:24}],icon:"mdi:alert-circle"},binary_sensor:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:25},{name:"window",icon:"mdi:window-open",sortOrder:26},{name:"lock",icon:"mdi:lock-open",sortOrder:27},{name:"motion",icon:"mdi:run",sortOrder:28},{name:"presence",icon:"mdi:home",sortOrder:29},{name:"occupancy",icon:"mdi:seat",sortOrder:30},{name:"vibration",icon:"mdi:vibrate",sortOrder:31},{name:"plug",icon:"mdi:power-plug",sortOrder:32},{name:"power",icon:"mdi:power-plug",sortOrder:33},{name:"battery",icon:"mdi:battery-alert",sortOrder:34},{name:"battery_charging",icon:"mdi:battery-charging",sortOrder:35},{name:"moving",icon:"mdi:car",sortOrder:36},{name:"running",icon:"mdi:play",sortOrder:37},{name:"gas",icon:"mdi:gas-cylinder",sortOrder:38},{name:"carbon_monoxide",icon:"mdi:molecule-co",sortOrder:39},{name:"cold",icon:"mdi:snowflake",sortOrder:40},{name:"heat",icon:"mdi:thermometer",sortOrder:41},{name:"moisture",icon:"mdi:water",sortOrder:42},{name:"connectivity",icon:"mdi:connection",sortOrder:43},{name:"opening",icon:"mdi:door-open",sortOrder:44},{name:"garage_door",icon:"mdi:garage-open",sortOrder:45},{name:"light",icon:"mdi:brightness-5",sortOrder:46},{name:"problem",icon:"mdi:alert-circle",sortOrder:47},{name:"safety",icon:"mdi:shield-alert",sortOrder:48},{name:"smoke",icon:"mdi:smoke-detector",sortOrder:49},{name:"sound",icon:"mdi:volume-high",sortOrder:50},{name:"tamper",icon:"mdi:shield-off",sortOrder:51},{name:"update",icon:"mdi:update",sortOrder:52}],icon:"mdi:alert-circle"}},this.config={extra_entities:[],hidden_entities:[]}}setConfig(e){this.config=e,e.extra_entities||delete this.config.extra_entities,e.hidden_entities||delete this.config.hidden_entities,this.entityConfig={alarm_control_panel:{icon:"mdi:bell-ring",sortOrder:1},siren:{icon:"mdi:alarm-light",sortOrder:2},lock:{icon:"mdi:lock",sortOrder:3},light:{icon:"mdi:lightbulb",sortOrder:4},media_player:{icon:"mdi:cast",sortOrder:5},climate:{icon:"mdi:thermostat",sortOrder:6},switch:{icon:"mdi:power",sortOrder:7},vacuum:{icon:"mdi:robot-vacuum",sortOrder:8},fan:{icon:"mdi:fan",sortOrder:9},humidifier:{icon:"mdi:air-humidifier",sortOrder:10},lawn_mower:{icon:"mdi:robot-mower",sortOrder:11},valve:{icon:"mdi:valve",sortOrder:12},water_heater:{icon:"mdi:water-boiler",sortOrder:13},remote:{icon:"mdi:remote",sortOrder:14},update:{icon:"mdi:update",sortOrder:53},device_tracker:{icon:"mdi:cellphone",sortOrder:54},input_boolean:{icon:"mdi:toggle-switch",sortOrder:55},timer:{icon:"mdi:timer-outline",sortOrder:56},counter:{icon:"mdi:counter",sortOrder:57},calendar:{icon:"mdi:calendar",sortOrder:58},cover:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:15},{name:"window",icon:"mdi:window-open",sortOrder:16},{name:"garage",icon:"mdi:garage-open",sortOrder:17},{name:"gate",icon:"mdi:gate-open",sortOrder:18},{name:"blind",icon:"mdi:blinds-open",sortOrder:19},{name:"curtain",icon:"mdi:curtains",sortOrder:20},{name:"damper",icon:"mdi:valve",sortOrder:21},{name:"awning",icon:"mdi:window-shutter-open",sortOrder:22},{name:"shade",icon:"mdi:roller-shade",sortOrder:23},{name:"shutter",icon:"mdi:window-shutter-open",sortOrder:24}],icon:"mdi:alert-circle"},binary_sensor:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:25},{name:"window",icon:"mdi:window-open",sortOrder:26},{name:"lock",icon:"mdi:lock-open",sortOrder:27},{name:"motion",icon:"mdi:run",sortOrder:28},{name:"presence",icon:"mdi:home",sortOrder:29},{name:"occupancy",icon:"mdi:seat",sortOrder:30},{name:"vibration",icon:"mdi:vibrate",sortOrder:31},{name:"plug",icon:"mdi:power-plug",sortOrder:32},{name:"power",icon:"mdi:power-plug",sortOrder:33},{name:"battery",icon:"mdi:battery-alert",sortOrder:34},{name:"battery_charging",icon:"mdi:battery-charging",sortOrder:35},{name:"moving",icon:"mdi:car",sortOrder:36},{name:"running",icon:"mdi:play",sortOrder:37},{name:"gas",icon:"mdi:gas-cylinder",sortOrder:38},{name:"carbon_monoxide",icon:"mdi:molecule-co",sortOrder:39},{name:"cold",icon:"mdi:snowflake",sortOrder:40},{name:"heat",icon:"mdi:thermometer",sortOrder:41},{name:"moisture",icon:"mdi:water",sortOrder:42},{name:"connectivity",icon:"mdi:connection",sortOrder:43},{name:"opening",icon:"mdi:door-open",sortOrder:44},{name:"garage_door",icon:"mdi:garage-open",sortOrder:45},{name:"light",icon:"mdi:brightness-5",sortOrder:46},{name:"problem",icon:"mdi:alert-circle",sortOrder:47},{name:"safety",icon:"mdi:shield-alert",sortOrder:48},{name:"smoke",icon:"mdi:smoke-detector",sortOrder:49},{name:"sound",icon:"mdi:volume-high",sortOrder:50},{name:"tamper",icon:"mdi:shield-off",sortOrder:51},{name:"update",icon:"mdi:update",sortOrder:52}],icon:"mdi:alert-circle"}}}configChanged(e){const t=new Event("config-changed",{bubbles:!0,composed:!0});t.detail={config:e},this.dispatchEvent(t)}static labelMap={entity:e=>e.localize("ui.components.selectors.selector.types.entity"),status:e=>e.localize("ui.components.selectors.selector.types.state"),color:e=>e.localize("ui.panel.lovelace.editor.card.tile.color"),icon:e=>e.localize("ui.components.selectors.selector.types.icon"),showPerson:e=>ce("show_person",e.language),showPersonName:e=>`${e.localize("component.person.entity_component._.name")} ${e.localize("ui.panel.lovelace.editor.card.generic.show_name")}`,showBadgeName:e=>`${e.localize("ui.panel.lovelace.editor.cardpicker.domain")} ${e.localize("ui.panel.lovelace.editor.card.generic.show_name")}`,bulkMode:e=>ce("bulk_mode",e.language),hideDomain:(e,t)=>`${e.localize(`component.${t}.entity_component._.name`)} ${e.localize("ui.common.disable")}`,hide_cover_DeviceClass:(e,t,i)=>`${e.localize(`ui.dialogs.entity_registry.editor.device_classes.cover.${i}`)} ${e.localize("ui.common.disable")}`,hide_binary_sensor_DeviceClass:(e,t,i)=>`${e.localize(`ui.dialogs.entity_registry.editor.device_classes.binary_sensor.${i}`)} ${e.localize("ui.common.disable")}`,domainName:e=>e.localize("ui.panel.lovelace.editor.cardpicker.domain"),deviceClassName:()=>"Device Class",sortOrder:()=>"Order",area:e=>e.localize("ui.components.selectors.selector.types.area"),floor:e=>e.localize("ui.components.selectors.selector.types.floor"),label:e=>e.localize("ui.components.label-picker.label"),labelFilter:e=>`${e.localize("ui.components.label-picker.label")} Filter`,areaFloorFilter:()=>""};_computeLabel(e,t,i){const s=he.labelMap[e.name];return s?s(this.hass,t,i):""}toggleSetting(e,t){["showPerson","bulkMode","showPersonName","showBadgeName"].includes(e)&&(this.config[e]=t,this.configChanged(this.config))}showMoreHiddenItems(){this.showMore=!0,this.requestUpdate()}updateConfig(e,t,i,s){this.config[e]=this.config[e]||{},this.config[e][t]=this.config[e][t]||{},i?this.config[e][t][i]=s:this.config[e][t]=s,this.configChanged(this.config),this.requestUpdate()}updateSortOrder(e,t,i){this.updateConfig("newSortOrder",e,t,i)}updateIcons(e,t,i){this.updateConfig("icons",e,t,i)}updateNames(e,t,i){this.updateConfig("names",e,t,i)}updateColors(e,t,i){this.updateConfig("colors",e,t,i)}updateVisibility(e,t,i){this.updateConfig("hide",e,t,i)}manageExtraEntity(e,t=null,i=null,s=null){this.config.extra_entities=this.config.extra_entities||[],"add"===e?this.config.extra_entities.push({entity:"",status:"",icon:"",color:""}):"update"===e&&null!==t&&null!==i?this.config.extra_entities[t][i]=s:"remove"===e&&null!==t&&this.config.extra_entities.splice(t,1),this.configChanged(this.config)}manageHiddenItem(e,t,i){const s=["hidden_entities","hidden_labels"];if(!s.includes(e))throw new Error(`Invalid type: ${e}. Expected one of ${s.join(", ")}`);this.config[e]||(this.config[e]=[]);const o=this.config[e],r="string"==typeof t?t.trim():t;if(r&&("string"!=typeof r||""!==r)){if("add"!==i||o.includes(r)){if("remove"===i){const e=o.indexOf(r);-1!==e&&o.splice(e,1)}}else o.push(r);this.config={...this.config,[e]:o},this.configChanged(this.config)}}updateAreaFloorSelection(e,t){this.config={...this.config,area_filter:{[e]:t||"",..."area"===e?{floor:void 0}:{area:void 0}}},this.configChanged(this.config)}updateLabelSelection(e){this.config={...this.config,label_filter:e||""},this.configChanged(this.config)}renderHaForm(e,t,i,s,o){const r={...i};return I`
      <ha-form
        .schema=${[{name:e,selector:t}]}
        .data=${i}
        .hass=${this.hass}
        .computeLabel=${s}
        @value-changed=${e=>{const t=e.detail.value;JSON.stringify(t)!==JSON.stringify(r)&&o(e)}}>
      </ha-form>
    `}renderSettings(){return I`
    <div class="settings">
        <div class="sub">
          ${this.renderHaForm("showPerson",{boolean:{}},{showPerson:this.config.showPerson??!0},this._computeLabel,(e=>this.toggleSetting("showPerson",e.detail.value.showPerson)))}
            </div>
              <div class="sub">
          ${this.renderHaForm("showPersonName",{boolean:{}},{showPersonName:this.config.showPersonName??!0},this._computeLabel,(e=>this.toggleSetting("showPersonName",e.detail.value.showPersonName)))}
            </div>           
  
          </div>          
    <div class="settings">    
               <div class="sub">
          ${this.renderHaForm("bulkMode",{boolean:{}},{bulkMode:this.config.bulkMode??!1},this._computeLabel,(e=>this.toggleSetting("bulkMode",e.detail.value.bulkMode)))}
            </div>  
            <div class="sub">
          ${this.renderHaForm("showBadgeName",{boolean:{}},{showBadgeName:this.config.showBadgeName??!0},this._computeLabel,(e=>this.toggleSetting("showBadgeName",e.detail.value.showBadgeName)))}
            </div>            
  
    </div>
  `}renderFilters(){const e=[{label:this.hass.localize("ui.components.selectors.selector.types.area"),value:"area"},{label:this.hass.localize("ui.components.selectors.selector.types.floor"),value:"floor"}],t=this.config.area_filter?Object.keys(this.config.area_filter)[0]:"";return I`
      <ha-expansion-panel outlined class="main">
        <div slot="header" role="heading" aria-level="3">${this.hass.localize("ui.panel.lovelace.editor.common.edit")} ${this.hass.localize("ui.components.subpage-data-table.filters")}</div>
        <div class="settings">
          <div class="flex">
            ${this.renderHaForm("areaFloorFilter",{select:{options:e}},{areaFloorFilter:t},this._computeLabel,(e=>this.updateAreaFloorSelection(e.detail.value.areaFloorFilter,"")))}
          </div>
          <div class="flex">
            ${this.renderHaForm("labelFilter",{boolean:{}},{labelFilter:(this.labelFilter||this.config.label_filter)??!1},this._computeLabel,(e=>{this.labelFilter=e.detail.value.labelFilter,this.requestUpdate()}))}
          </div>
        </div>
        <div class="filter">
          ${"area"===t?this.renderHaForm("area",{area:{}},{area:this.config.area_filter.area||""},this._computeLabel,(e=>this.updateAreaFloorSelection("area",e.detail.value.area))):""}
          ${"floor"===t?this.renderHaForm("floor",{floor:{}},{floor:this.config.area_filter.floor||""},this._computeLabel,(e=>this.updateAreaFloorSelection("floor",e.detail.value.floor))):""}
        </div>
        <div class="filter">
          ${this.labelFilter||this.config.label_filter?this.renderHaForm("label",{label:{}},{label:this.config.label_filter||""},this._computeLabel,(e=>this.updateLabelSelection(e.detail.value.label))):""}
        </div>
      </ha-expansion-panel>
    `}renderDomainConfig(){return I`
      <ha-expansion-panel outlined class="main">
        <div slot="header" role="heading" aria-level="3">${ce("edit_domains",this.hass.language)}</div>
        <div class="content">
          ${Object.keys(this.entityConfig).filter((e=>!["cover","binary_sensor"].includes(e))).map((e=>I`
              <ha-expansion-panel outlined ?expanded="${this.openedDomains.includes(e)}" class="child">
                <div slot="header" role="heading" aria-level="3">
                  ${this.hass.localize(`component.${e}.entity_component._.name`)||e}
                </div>
                <div class="sub-content">
                  ${this.renderHaForm("hideDomain",{boolean:{}},{hideDomain:this.config.hide?.[e]||!1},(t=>this._computeLabel(t,e)),(t=>this.updateVisibility(e,null,t.detail.value.hideDomain)))}
                  ${this.renderHaForm("domainName",{text:{}},{domainName:this.config.names?.[e]||""},this._computeLabel,(t=>this.updateNames(e,null,t.detail.value.domainName)))}
                  ${this.renderHaForm("icon",{icon:{}},{icon:this.config.icons?.[e]||""},this._computeLabel,(t=>this.updateIcons(e,null,t.detail.value.icon)))}
                  ${this.renderHaForm("color",{ui_color:{}},{color:this.config.colors?.[e]||""},this._computeLabel,(t=>this.updateColors(e,null,t.detail.value.color)))}
                  ${this.renderHaForm("sortOrder",{number:{}},{sortOrder:void 0!==this.config.newSortOrder?.[e]?this.config.newSortOrder?.[e]:this.entityConfig[e]?.sortOrder||0},this._computeLabel,(t=>{const i=Number(t.detail.value.sortOrder);this.newSortOrder=i,this.updateSortOrder(e,null,i)}))}
                </div>
              </ha-expansion-panel>
            `))}
        </div>
      </ha-expansion-panel>
    `}renderDeviceClassConfig(){return I`
      ${["cover","binary_sensor"].map((e=>I`
        <ha-expansion-panel outlined class="main">
          <div slot="header" role="heading" aria-level="3">${ce(`edit_${e}_dc`,this.hass.language)}</div>
          <div class="content">
            ${this.entityConfig[e].deviceClasses.map((t=>I`
              <ha-expansion-panel outlined ?expanded="${this.openedDeviceClasses.includes(`${e}-${t.name}`)}" class="child">
                <div slot="header" role="heading" aria-level="3">
                  ${this.hass.localize(`ui.dialogs.entity_registry.editor.device_classes.${e}.${t.name}`)}
                </div>
                <div class="sub-content">
                  ${this.renderHaForm(`hide_${e}_DeviceClass`,{boolean:{}},{[`hide_${e}_DeviceClass`]:this.config.hide?.[e]?.[t.name]||!1},(i=>this._computeLabel(i,e,t.name)),(i=>this.updateVisibility(e,t.name,i.detail.value[`hide_${e}_DeviceClass`])))}
                  ${this.renderHaForm("deviceClassName",{text:{}},{deviceClassName:this.config.names?.[e]?.[t.name]||""},this._computeLabel,(i=>this.updateNames(e,t.name,i.detail.value.deviceClassName)))}
                  ${this.renderHaForm("icon",{icon:{}},{icon:this.config.icons?.[e]?.[t.name]||""},this._computeLabel,(i=>this.updateIcons(e,t.name,i.detail.value.icon)))}
                  ${this.renderHaForm("color",{ui_color:{}},{color:this.config.colors?.[e]?.[t.name]||""},this._computeLabel,(i=>this.updateColors(e,t.name,i.detail.value.color)))}
                  ${this.renderHaForm("sortOrder",{number:{}},{sortOrder:void 0!==this.config.newSortOrder?.[e]?.[t.name]?this.config.newSortOrder[e][t.name]:t.sortOrder||0},this._computeLabel,(i=>this.updateSortOrder(e,t.name,Number(i.detail.value.sortOrder))))}
                </div>
              </ha-expansion-panel>
            `))}
          </div>
        </ha-expansion-panel>
      `))}
    `}renderExtraEntities(){const e=this.config.extra_entities||[];return I`
      <ha-expansion-panel outlined class="main">
        <div slot="header" role="heading" aria-level="3">
          Extra ${this.hass.localize("ui.panel.lovelace.editor.card.entities.name")}
        </div>
        <div class="content">
          ${e.map(((e,t)=>I`
            <div class="extra-entity">
              <div class="extra-entity-top">
                <div class="extra-entity-entity">
                  ${this.renderHaForm("entity",{entity:{}},{entity:e.entity},this._computeLabel,(e=>this.manageExtraEntity("update",t,"entity",e.detail.value.entity)))}
                </div>
                <div class="extra-entity-remove">
                <ha-icon-button class="remove-icon" @click=${()=>{this.manageExtraEntity("remove",t),this.updateSortOrder("extra",e.entity,"")}}>
                  <ha-icon class="center" icon="mdi:delete"></ha-icon>
                </ha-icon-button>
                </div>
              </div>
              <div class="extra-entity-bottom">
                <div class="extra-entity-status">
                  ${this.renderHaForm("status",{state:{entity_id:e.entity}},{status:e.status},this._computeLabel,(e=>this.manageExtraEntity("update",t,"status",e.detail.value.status)))}
                </div>
                <div class="extra-entity-sort">
                  ${this.renderHaForm("sortOrder",{number:{}},{sortOrder:this.config.newSortOrder?.extra?.[e.entity]??""},this._computeLabel,(t=>this.updateSortOrder("extra",e.entity,Number(t.detail.value.sortOrder))))}
                </div>
              </div>
              <div class="extra-entity-bottom">
                <div class="extra-entity-icon">
                  ${this.renderHaForm("icon",{icon:{}},{icon:e.icon||""},this._computeLabel,(e=>this.manageExtraEntity("update",t,"icon",e.detail.value.icon)))}
                </div>            
                <div class="extra-entity-color">
                  ${this.renderHaForm("color",{ui_color:{}},{color:e.color||""},this._computeLabel,(e=>this.manageExtraEntity("update",t,"color",e.detail.value.color)))}
                </div>
              </div>
            </div>
          `))}
          <ha-button slot="trigger" outlined="" @click=${()=>this.manageExtraEntity("add")}> 
            <ha-icon class="button-icon" icon="mdi:plus"></ha-icon>
            <span class="button-text">${this.hass.localize("ui.common.add")}</span>
          </ha-button>
        </div>
      </ha-expansion-panel>
    `}renderHiddenEntities(){const e=(this.config.hidden_entities||[]).slice().sort(),t=(this.config.hidden_labels||[]).slice().sort(),i=[...e.map((e=>({type:"entity",value:e}))),...t.map((e=>({type:"label",value:e})))],s=this.showMore||i.length<=5,o=s?i:i.slice(0,5),r=[{label:this.hass.localize("ui.components.selectors.selector.types.entity"),value:"entity"},{label:this.hass.localize("ui.components.label-picker.label"),value:"label"}],n=this.hide_type;return I`
      <ha-expansion-panel outlined class="main">
        <div slot="header" role="heading" aria-level="3">
          ${this.hass.localize("ui.panel.lovelace.editor.entities.remove")}
        </div>
          <div class="entity-label-picker">
            ${this.renderHaForm("entityLabelFilter",{select:{options:r}},{entityLabelFilter:n},this._computeLabel,(e=>{this.hide_type=e.detail.value.entityLabelFilter,this.requestUpdate()}))}
          </div>
          <div class="entity-label-form">
            ${"entity"===n?this.renderHaForm("entity",{entity:{}},{entity:null},this._computeLabel,(e=>this.manageHiddenItem("hidden_entities",e.detail.value.entity,"add"))):""}
            ${"label"===n?this.renderHaForm("label",{label:{}},{label:null},this._computeLabel,(e=>this.manageHiddenItem("hidden_labels",e.detail.value.label,"add"))):""}
          </div>
          ${i.length>0?I`
            <h3>${this.hass.localize("ui.dialogs.entity_registry.editor.disabled_label")}:</h3>
            <ul>
              ${o.map((e=>I`
                <li class="hidden-entity">
                  <span>
                    ${"entity"===e.type?`${this.hass.localize("ui.components.selectors.selector.types.entity")}: ${e.value}`:`${this.hass.localize("ui.components.label-picker.label")}: ${e.value.charAt(0).toUpperCase()+e.value.slice(1)}`}
                  </span>
                  <ha-icon-button class="remove-icon"
                    @click=${()=>this.manageHiddenItem("entity"===e.type?"hidden_entities":"hidden_labels",e.value,"remove")}>
                    <ha-icon class="center" icon="mdi:delete"></ha-icon>
                  </ha-icon-button>
                </li>
              `))}
              ${s?"":I`
                <li class="hidden-entity">
                  <mwc-button @click=${()=>this.showMoreHiddenItems()}>
                    ${this.hass.localize("ui.dialogs.more_info_control.show_more")}
                  </mwc-button>
                </li>
              `}
            </ul>
          `:""}
          </div>        
      </ha-expansion-panel>
    `}render(){return this.config?I`
        ${this.renderSettings()}
        ${this.renderFilters()}
        <ha-expansion-panel outlined class="main">
          <div slot="header" role="heading" aria-level="3">${ce("edit_domains_dc",this.hass.language)}</div>
        ${this.renderDomainConfig()}
        ${this.renderDeviceClassConfig()}
        </ha-expansion-panel>
        ${this.renderExtraEntities()}
        ${this.renderHiddenEntities()}
    `:I`<div>Invalid Configuration</div>`}static get styles(){return r`  
      ul { margin: 0; padding: 5px;  }
      .button-icon { --mdc-icon-size: 1.125rem; margin-right: 8px; }
      .button-text { font-size:  var(--mdc-typography-button-font-size, .875rem);}
      .remove-icon { --mdc-icon-button-size: 36px; color: var(--secondary-text-color); align-self: center; }
      h3 { margin: 0; padding: 8px 0; display: flex; align-items: center; }
      .center {display: flex; align-items: center; justify-content: center;}
      .main {margin-top: 5px;}
      .sub {margin-top: -10px; flex: 1}
      .child {width:calc(50% - 2px); margin-top: 3px;}
      .person-entity, .hidden-entity { display: flex; align-items: center; } 
      .hidden-entity { justify-content: space-between; }
      .hidden-entity span { max-width: calc(100% - 35px); word-wrap: break-word; }
      .content { display: flex; flex-wrap: wrap; margin: 10px 0px; }  
      .settings { display: flex; flex-wrap: wrap; gap: 20px; padding: 0 6px; align-items: center;}
      .flex { flex: 1; }
      .sub-content { padding: 10px 5px; }  
      .entity-picker { flex: 7; }
      .filter { margin-bottom: 10px; } 
      .status-text { flex: 3; }
      .extra-entity {width: 100%; }
      .extra-entity-color, .extra-entity-icon, .extra-entity-sort { flex: 1; min-width: 0; }
      .extra-entity-remove {text-align: center; flex: 1; align-content: center;}
      .remove-icon{ text-align: end;  }
      .extra-entity-entity, .extra-entity-status { flex: 5; }
      .extra-entity-bottom, .extra-entity-top{ display: flex;flex-wrap: wrap; gap: 8px; margin-bottom: 10px; }
      .area-floor-picker { margin-right: auto; flex: 4;}
      .entity-label-form {margin-bottom: 10px }
      .top-row {display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; padding: 2px 5px;}
    `}}customElements.define("status-card",class extends ne{static get properties(){return{config:{type:Object},hass:{type:Object},areas:{type:Array},devices:{type:Array},entities:{type:Array}}}constructor(){super(),this.entityConfig={alarm_control_panel:{icon:"mdi:bell-ring",sortOrder:1},siren:{icon:"mdi:alarm-light",sortOrder:2},lock:{icon:"mdi:lock",sortOrder:3},light:{icon:"mdi:lightbulb",sortOrder:4},media_player:{icon:"mdi:cast",sortOrder:5},climate:{icon:"mdi:thermostat",sortOrder:6},switch:{icon:"mdi:power",sortOrder:7},vacuum:{icon:"mdi:robot-vacuum",sortOrder:8},fan:{icon:"mdi:fan",sortOrder:9},humidifier:{icon:"mdi:air-humidifier",sortOrder:10},lawn_mower:{icon:"mdi:robot-mower",sortOrder:11},valve:{icon:"mdi:valve",sortOrder:12},water_heater:{icon:"mdi:water-boiler",sortOrder:13},remote:{icon:"mdi:remote",sortOrder:14},update:{icon:"mdi:update",sortOrder:53},device_tracker:{icon:"mdi:cellphone",sortOrder:54},input_boolean:{icon:"mdi:toggle-switch",sortOrder:55},timer:{icon:"mdi:timer-outline",sortOrder:56},counter:{icon:"mdi:counter",sortOrder:57},calendar:{icon:"mdi:calendar",sortOrder:58},cover:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:15},{name:"window",icon:"mdi:window-open",sortOrder:16},{name:"garage",icon:"mdi:garage-open",sortOrder:17},{name:"gate",icon:"mdi:gate-open",sortOrder:18},{name:"blind",icon:"mdi:blinds-open",sortOrder:19},{name:"curtain",icon:"mdi:curtains",sortOrder:20},{name:"damper",icon:"mdi:valve",sortOrder:21},{name:"awning",icon:"mdi:window-shutter-open",sortOrder:22},{name:"shade",icon:"mdi:roller-shade",sortOrder:23},{name:"shutter",icon:"mdi:window-shutter-open",sortOrder:24}],icon:"mdi:alert-circle"},binary_sensor:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:25},{name:"window",icon:"mdi:window-open",sortOrder:26},{name:"lock",icon:"mdi:lock-open",sortOrder:27},{name:"motion",icon:"mdi:run",sortOrder:28},{name:"presence",icon:"mdi:home",sortOrder:29},{name:"occupancy",icon:"mdi:seat",sortOrder:30},{name:"vibration",icon:"mdi:vibrate",sortOrder:31},{name:"plug",icon:"mdi:power-plug",sortOrder:32},{name:"power",icon:"mdi:power-plug",sortOrder:33},{name:"battery",icon:"mdi:battery-alert",sortOrder:34},{name:"battery_charging",icon:"mdi:battery-charging",sortOrder:35},{name:"moving",icon:"mdi:car",sortOrder:36},{name:"running",icon:"mdi:play",sortOrder:37},{name:"gas",icon:"mdi:gas-cylinder",sortOrder:38},{name:"carbon_monoxide",icon:"mdi:molecule-co",sortOrder:39},{name:"cold",icon:"mdi:snowflake",sortOrder:40},{name:"heat",icon:"mdi:thermometer",sortOrder:41},{name:"moisture",icon:"mdi:water",sortOrder:42},{name:"connectivity",icon:"mdi:connection",sortOrder:43},{name:"opening",icon:"mdi:door-open",sortOrder:44},{name:"garage_door",icon:"mdi:garage-open",sortOrder:45},{name:"light",icon:"mdi:brightness-5",sortOrder:46},{name:"problem",icon:"mdi:alert-circle",sortOrder:47},{name:"safety",icon:"mdi:shield-alert",sortOrder:48},{name:"smoke",icon:"mdi:smoke-detector",sortOrder:49},{name:"sound",icon:"mdi:volume-high",sortOrder:50},{name:"tamper",icon:"mdi:shield-off",sortOrder:51},{name:"update",icon:"mdi:update",sortOrder:52}],icon:"mdi:alert-circle"}}}shouldComponentUpdate(e,t){return e.config!==this.props.config||t!==this.state}setConfig(e){if(!e)throw new Error("Invalid configuration");this.config=e,this.areas=[],this.devices=[],this.entities=[],this.entitiesInDomain=[],this.filteredAreas=[],this.areaDevicesMap=new Map,this.hiddenEntities=new Set(e.hidden_entities||[]),this.hiddenLabels=new Set(e.hidden_labels||[]),this.showPerson=void 0===e.showPerson||e.showPerson,this.showPersonName=void 0===e.showPersonName||e.showPersonName,this.showBadgeName=void 0===e.showBadgeName||e.showBadgeName,this.bulkMode=void 0!==e.bulkMode&&e.bulkMode,this.propertyCache=new Map,this.entityConfig={alarm_control_panel:{icon:"mdi:bell-ring",sortOrder:1},siren:{icon:"mdi:alarm-light",sortOrder:2},lock:{icon:"mdi:lock",sortOrder:3},light:{icon:"mdi:lightbulb",sortOrder:4},media_player:{icon:"mdi:cast",sortOrder:5},climate:{icon:"mdi:thermostat",sortOrder:6},switch:{icon:"mdi:power",sortOrder:7},vacuum:{icon:"mdi:robot-vacuum",sortOrder:8},fan:{icon:"mdi:fan",sortOrder:9},humidifier:{icon:"mdi:air-humidifier",sortOrder:10},lawn_mower:{icon:"mdi:robot-mower",sortOrder:11},valve:{icon:"mdi:valve",sortOrder:12},water_heater:{icon:"mdi:water-boiler",sortOrder:13},remote:{icon:"mdi:remote",sortOrder:14},update:{icon:"mdi:update",sortOrder:53},device_tracker:{icon:"mdi:cellphone",sortOrder:54},input_boolean:{icon:"mdi:toggle-switch",sortOrder:55},timer:{icon:"mdi:timer-outline",sortOrder:56},counter:{icon:"mdi:counter",sortOrder:57},calendar:{icon:"mdi:calendar",sortOrder:58},cover:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:15},{name:"window",icon:"mdi:window-open",sortOrder:16},{name:"garage",icon:"mdi:garage-open",sortOrder:17},{name:"gate",icon:"mdi:gate-open",sortOrder:18},{name:"blind",icon:"mdi:blinds-open",sortOrder:19},{name:"curtain",icon:"mdi:curtains",sortOrder:20},{name:"damper",icon:"mdi:valve",sortOrder:21},{name:"awning",icon:"mdi:window-shutter-open",sortOrder:22},{name:"shade",icon:"mdi:roller-shade",sortOrder:23},{name:"shutter",icon:"mdi:window-shutter-open",sortOrder:24}],icon:"mdi:alert-circle"},binary_sensor:{deviceClasses:[{name:"door",icon:"mdi:door-open",sortOrder:25},{name:"window",icon:"mdi:window-open",sortOrder:26},{name:"lock",icon:"mdi:lock-open",sortOrder:27},{name:"motion",icon:"mdi:run",sortOrder:28},{name:"presence",icon:"mdi:home",sortOrder:29},{name:"occupancy",icon:"mdi:seat",sortOrder:30},{name:"vibration",icon:"mdi:vibrate",sortOrder:31},{name:"plug",icon:"mdi:power-plug",sortOrder:32},{name:"power",icon:"mdi:power-plug",sortOrder:33},{name:"battery",icon:"mdi:battery-alert",sortOrder:34},{name:"battery_charging",icon:"mdi:battery-charging",sortOrder:35},{name:"moving",icon:"mdi:car",sortOrder:36},{name:"running",icon:"mdi:play",sortOrder:37},{name:"gas",icon:"mdi:gas-cylinder",sortOrder:38},{name:"carbon_monoxide",icon:"mdi:molecule-co",sortOrder:39},{name:"cold",icon:"mdi:snowflake",sortOrder:40},{name:"heat",icon:"mdi:thermometer",sortOrder:41},{name:"moisture",icon:"mdi:water",sortOrder:42},{name:"connectivity",icon:"mdi:connection",sortOrder:43},{name:"opening",icon:"mdi:door-open",sortOrder:44},{name:"garage_door",icon:"mdi:garage-open",sortOrder:45},{name:"light",icon:"mdi:brightness-5",sortOrder:46},{name:"problem",icon:"mdi:alert-circle",sortOrder:47},{name:"safety",icon:"mdi:shield-alert",sortOrder:48},{name:"smoke",icon:"mdi:smoke-detector",sortOrder:49},{name:"sound",icon:"mdi:volume-high",sortOrder:50},{name:"tamper",icon:"mdi:shield-off",sortOrder:51},{name:"update",icon:"mdi:update",sortOrder:52}],icon:"mdi:alert-circle"}}}async firstUpdated(){await this._loadData()}async _loadData(){try{const[e,t,i]=await Promise.all([this.hass.callWS({type:"config/area_registry/list"}),this.hass.callWS({type:"config/device_registry/list"}),this.hass.callWS({type:"config/entity_registry/list"})]);this.areas=e,this.devices=t,this.entities=i,this.updateFilteredAreasAndDevices()}catch(e){console.error("Error loading data:",e)}}getProperty(e,t){const i=this._generateCacheKey(e,t),s=this._getCachedValue(i,e,t);if(void 0!==s)return s;const{type:o,device_class:r,originalName:n}=e,a=this.entityConfig[o],d=this.config[t],c=this.hass.states[e.entity_id];let l=null;return"sortOrder"===t?l=this._getSortOrder(o,r,a):["binary_sensor","cover"].includes(o)&&(l=this._getBinarySensorOrCoverProperty(o,r,t,d,a)),null===l&&(l=this._getDefaultProperty(o,n,t,d,c,e)),this.propertyCache.set(i,l),l}_generateCacheKey(e,t){return`${e.type}_${e.device_class||""}_${t}`}_getCachedValue(e,t,i){if(this.propertyCache.has(e)){const s=this.propertyCache.get(e);if("status"===i&&t.entity_id?.startsWith("person.")){const o=this.hass.states[t.entity_id];if(o?.state!==s)return this.propertyCache.delete(e),this.getProperty(t,i)}return s}}_getSortOrder(e,t,i){return"extra"===e?this.config.newSortOrder?.extra?.[t]??-1:t?this.config.newSortOrder?.[e]?.[t]??(i?.deviceClasses?.find((e=>e.name===t))?.sortOrder||1/0):this.config.newSortOrder?.[e]??(i?.sortOrder||1/0)}_getBinarySensorOrCoverProperty(e,t,i,s,o){switch(i){case"hide":case"colors":return s?.[e]?.[t]||"";case"names":return s?.[e]?.[t]||this.hass.localize(`ui.dialogs.entity_registry.editor.device_classes.${e}.${t}`);case"icons":return s?.[e]?.[t]||o?.deviceClasses?.find((e=>e.name===t))?.icon||o?.icon;default:return null}}_getDefaultProperty(e,t,i,s,o,r){return["hide","colors"].includes(i)?s?.[e]||"":"names"===i?s?.[e]||this.hass.localize(`component.${e}.entity_component._.name`)||e:"icons"===i?s?.[e]||this.entityConfig[e]?.icon:"status"===i?this._getStatusProperty(e,t,o,r):null}_getStatusProperty(e,t,i,s){return s.entity_id&&s.entity_id.startsWith("person.")?"home"===i?.state?this.hass.localize("component.person.entity_component._.state.home"):"not_home"===i?.state?this.hass.localize("component.person.entity_component._.state.not_home"):i?.state:"device_tracker"===e?this.hass.localize("component.person.entity_component._.state.home"):["lock","cover"].includes(e)||["window","door","lock"].includes(t)||["awning","blind","curtain","damper","garage","gate","shade","shutter"].includes(t)?this.hass.localize("component.cover.entity_component._.state.open"):this.hass.localize("component.light.entity_component._.state.on")}toggleMoreInfo(e,t=null,i=null,s=null){const o=this.shadowRoot.getElementById("more-info-dialog");o&&("show"===e?(Object.assign(this,{selectedDomain:t,entitiesInDomain:i,selectedEntityName:s}),this.requestUpdate(),o.hasAttribute("open")||(o.style.display="block"),o.setAttribute("open","true")):"close"===e&&(o.removeAttribute("open"),o.style.display="none"))}showMoreInfo(e){const t=new CustomEvent("hass-more-info",{detail:{entityId:e.entity_id},bubbles:!0,composed:!0});document.querySelector("home-assistant").dispatchEvent(t)}createCard(e){const t=document.createElement(`hui-${e.type}-card`);return t?(t.hass=this.hass,t.setConfig(e),t):I`<p>Invalid Configuration</p>`}isEntityHidden(e){const t=this.config.hidden_labels||[];return this.hiddenEntities.has(e.entity_id)||t.some((t=>e.labels&&e.labels.includes(t)))||e.hidden_by}updateFilteredAreasAndDevices(){const{area:e,floor:t}=this.config.area_filter||{},i=this.config.label_filter||"";this.filteredAreas=this.areas.filter((i=>!(t&&i.floor_id!==t||e&&i.area_id!==e))),this.areaDevicesMap.clear(),this.filteredAreas.forEach((e=>{const t=this.devices.filter((t=>t.area_id===e.area_id)).filter((e=>!i||this.entities.some((t=>t.device_id===e.id&&t.labels&&t.labels.includes(i)))));this.areaDevicesMap.set(e.area_id,new Set(t.map((e=>e.id))))}))}getEntityData(e){const t=new Map;if(!t.has(e)){const i=this.hass.states[e]?.state,s=this.hass.states[e]?.attributes.device_class,o=this.hass.states[e]?.attributes?.friendly_name||e,r=this.hass.states[e]?.attributes?.entity_picture||"";t.set(e,{state:i,deviceClass:s,friendlyName:o,entityPicture:r})}return t.get(e)}loadPersonEntities(){return this.showPerson?this.entities.filter((e=>e.entity_id.startsWith("person.")&&!this.hiddenEntities.has(e.entity_id)&&!e.disabled_by&&!e.hidden_by)):[]}loadGroupedEntities(){const e={cover:{},binary_sensor:{}},t=this.config.label_filter||"",i=this.entities.reduce(((i,s)=>{const{entity_id:o,area_id:r,device_id:n}=s,a=o.split(".")[0],d=this.getEntityData(o),{state:c,deviceClass:l}=d;if(!this.entityConfig[a]||!c||me.has(c)||this.isEntityHidden(s))return i;const m="update"===a||(r?this.areaDevicesMap.has(r):Array.from(this.areaDevicesMap.values()).some((e=>e.has(n)))),h=!t||s.labels&&s.labels.includes(t)||n&&this.devices.some((e=>e.id===n&&e.labels&&e.labels.includes(t)));return m&&h&&(["cover","binary_sensor"].includes(a)&&("on"===c||"open"===c)&&l&&"none"!==l?(e[a][l]||=[],e[a][l].push(s)):le.has(c)||["cover","binary_sensor"].includes(a)||(i[a]||=[],i[a].push(s))),i}),{});return{deviceClassEntities:e,groupedEntities:i}}loadExtraEntities(){return(this.config?.extra_entities||[]).reduce(((e,{entity:t,status:i,icon:s,color:o})=>{const r=t?this.hass.states[t]:null;return r&&r.state===i&&e.push({type:"extra",originalName:r.attributes.friendly_name||t,entities:[r],icon:s,color:o,device_class:t,sortOrder:this.config.newSortOrder?.extra?.[t]??-1}),e}),[])}loadAllEntities(){const{deviceClassEntities:e,groupedEntities:t}=this.loadGroupedEntities(),i=[...this.loadExtraEntities(),...Object.entries(t).map((([e,t])=>({type:e,originalName:e,entities:t,sortOrder:this.entityConfig[e]?.sortOrder||100}))),...["cover","binary_sensor"].flatMap((t=>Object.entries(e[t]).map((([e,i])=>({type:t,originalName:e,device_class:e,entities:i,sortOrder:this.entityConfig[t]?.deviceClasses.find((t=>t.name===e))?.sortOrder||100})))))];return i.sort(((e,t)=>(this.getProperty(e,"sortOrder")||100)-(this.getProperty(t,"sortOrder")||100))),i}renderPersonEntities(){return this.loadPersonEntities().map((e=>{const t=this.getEntityData(e.entity_id),i=this.hass.states[e.entity_id],s="not_home"===i?.state;return I`
        <paper-tab @click=${()=>this.showMoreInfo(e)}>
          <div class="entity">
            <div class="entity-icon">
              <img src="${t.entityPicture}" alt="Person Picture" style="${s?"filter: grayscale(100%)":""}" />
            </div>
            <div class="entity-info">
              <div class="entity-name">${this.showPersonName?t.friendlyName.split(" ")[0]:""}</div>
              <div class="entity-state">${this.getProperty(e,"status")}</div>
            </div>
          </div>
        </paper-tab>
      `}))}renderExtraEntities(){return this.loadExtraEntities().map((({entity:e,icon:t,color:i})=>{const s=e?this.hass.states[e]:null,o=s?.attributes?.friendly_name||e;return s?I`
        <paper-tab @click=${()=>this.showMoreInfo(s)}>
          <div class="extra-entity">
            <div class="entity-icon" style="color: var(--${i||""}-color);">
              <ha-icon icon="${t}"></ha-icon>
            </div>
            <div class="entity-info">
              <div class="entity-name">${this.showBadgeName?o:""}</div>
              <div class="entity-state">${ce(s?.state,this.hass.language)}</div>
            </div>
          </div>
        </paper-tab>
      `:null}))}renderAllEntities(){return this.loadAllEntities().filter((e=>!this.getProperty(e,"hide"))).map((e=>I`
      <paper-tab @click=${()=>{"extra"===e.type?this.showMoreInfo(e.entities[0]):this.toggleMoreInfo("show",e.type,e.entities,this.getProperty(e,"names"))}}>
        <div class="entity">
          <div class="entity-icon" style="color: var(--${e.color||this.getProperty(e,"colors")||""}-color);">
            <ha-icon icon="${e.icon||this.getProperty(e,"icons")}"></ha-icon>
          </div>
          <div class="entity-info">
            <div class="entity-name">${this.showBadgeName?"extra"===e.type?e.originalName:this.getProperty(e,"names"):""}</div>
            <div class="entity-state">
              ${"extra"===e.type&&e.entities?.[0]?ce(e.entities[0].state,this.hass.language):`${e.entities.length} ${this.getProperty(e,"status")}`}
            </div>
          </div>
        </div>
      </paper-tab>
    `))}renderMoreInfoDialog(){return I`
      <ha-dialog id="more-info-dialog" style="display:none;">
        <div class="dialog-header">
          <ha-icon-button slot="navigationIcon" dialogaction="cancel" @click=${()=>this.toggleMoreInfo("close")} title="${this.hass.localize("ui.common.close")}">
            <ha-icon class="center" icon="mdi:close"></ha-icon>
          </ha-icon-button>
          <h3>${this.hass.localize("ui.panel.lovelace.editor.card.entities.name")} in ${this.selectedEntityName}:</h3>
        </div>
        <div class="tile-container">
          ${this.bulkMode?I`<ul class="entity-list">${this.entitiesInDomain.map((e=>I`<li class="entity-item">- ${e.entity_id}</li>`))}</ul>`:this.entitiesInDomain.map((e=>I`
              <div class="entity-card" .entity="${e.entity_id}">
                ${this.createCard({type:"tile",entity:e.entity_id,..."light"===this.selectedDomain&&{features:[{type:"light-brightness"}]},..."cover"===this.selectedDomain&&{features:[{type:"cover-open-close"},{type:"cover-position"}]}})}
              </div>
            `))}
        </div>
      </ha-dialog>
    `}render(){return I`
      <ha-card>
        <paper-tabs selected="0" scrollable hide-scroll-buttons>
        ${this.renderPersonEntities()}
        ${this.renderExtraEntities()}
        ${this.renderAllEntities()}
        </paper-tabs>
      </ha-card>
      ${this.renderMoreInfoDialog()}
    `}static get styles(){return r`
        ul { margin: 0; padding: 5px;  }
        paper-tabs { height: 110px; padding: 4px 8px }
        paper-tab {padding: 0 5px; }
        .center {display: flex; align-items: center; justify-content: center;}
        .entity, .extra-entity { display: flex; flex-direction: column; align-items: center;}
        .entity-icon { width: 50px; height: 50px; border-radius: 50%;
            background-color: rgba(var(--rgb-primary-text-color), 0.15);
            display: flex; align-items: center; justify-content: center;
            overflow: hidden;}
        .entity-icon img {width: 100%; height: 100%; object-fit: cover; border-radius: 50%;}
        .entity-info { text-align: center; margin-top: 5px; }
        .entity-name { font-weight: bold; margin-bottom: 2px; }
        .entity-state { color: var(--secondary-text-color); font-size: 0.9em; }            
        .dialog-header { display: flex;  justify-content: flex-start; align-items: center; gap: 8px; margin-bottom: 12px;} 
        .dialog-header ha-icon-button { margin-right: 10px;  }
        ha-dialog#more-info-dialog { --mdc-dialog-max-width: 90vw; } 
        .tile-container { display: flex; flex-wrap: wrap; gap: 4px; }
        .entity-card { width: calc(22.5vw  - 15px ); box-sizing: border-box; }
        .entity-list { list-style: none; }
        @media (max-width: 768px) {
            .entity-card { flex-basis: 100%; max-width: 100%; }
            .tile-container { width: 100%; }
        }
    `}static getConfigElement(){return document.createElement("status-card-editor")}static getStubConfig(){return{}}}),customElements.define("status-card-editor",he),console.info("%c STATUS-CARD %c 2.3.0 ","color: steelblue; background: black; font-weight: bold;","color: white ; background: dimgray; font-weight: bold;"),window.customCards=window.customCards||[],window.customCards.push({type:"status-card",name:"Status Card",preview:!0,description:"A custom card that displays active entities grouped by domain.",documentationURL:"https://developers.home-assistant.io/docs/frontend/custom-ui/custom-card"})})();